=begin
#Ahello REST API documentation

#На данной странице вы можете выполнять запросы к API, для этого необходимо указать 'appId', который  был передан вам сотрудниками тех. поддержки в поле api_key. Укажите также PartnerUserId (это CRM Id пользователя или его email ), partnerUserId передается в заголовке запроса. Важно!!! ApiKeys-аутентификация c указанием только ключа appId в ближайшее время будет работать только для данной страницы документации. Для реальных сценариев интеграции необходимо использовать HMAC-аутентификацию. В ближайшее время появится раздел помощи по основным вопросам работы с API

OpenAPI spec version: v1
Contact: petrunin@action-media.ru
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.16

=end

require 'spec_helper'
require 'json'

# Unit tests for AktionClient::DemoApiApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DemoApiApi' do
  before do
    # run before each test
    @instance = AktionClient::DemoApiApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DemoApiApi' do
    it 'should create an instance of DemoApiApi' do
      expect(@instance).to be_instance_of(AktionClient::DemoApiApi)
    end
  end

  # unit tests for demo_api_create
  # Создает демодоступ
  # Если контактное лицо существует в CRM Актион, то можно указать только email контакта, иначе необходимо заполнить все поля
  # @param demo_model 
  # @param [Hash] opts the optional parameters
  # @return [DemoAccess]
  describe 'demo_api_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for demo_api_get_demo_access_by_code
  # Получает демодоступ по коду доступа
  # @param code 
  # @param [Hash] opts the optional parameters
  # @return [DemoAccess]
  describe 'demo_api_get_demo_access_by_code test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for demo_api_get_demo_access_history
  # Получает список продуктов для демодоступа
  # @param email 
  # @param [Hash] opts the optional parameters
  # @return [Array<DemoAccessHistory>]
  describe 'demo_api_get_demo_access_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for demo_api_get_demo_accesses_by_partner_id
  # Получает список демодоступов по партнеру
  # @param partner_id 
  # @param from 
  # @param to 
  # @param [Hash] opts the optional parameters
  # @return [Array<DemoAccess>]
  describe 'demo_api_get_demo_accesses_by_partner_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for demo_api_get_demo_accesses_by_user_id
  # Получает список демодоступов по пользователю
  # @param user_id 
  # @param from 
  # @param to 
  # @param [Hash] opts the optional parameters
  # @return [Array<DemoAccess>]
  describe 'demo_api_get_demo_accesses_by_user_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for demo_api_get_demo_products
  # Получает список продуктов для демодоступа
  # @param [Hash] opts the optional parameters
  # @return [Array<MainProduct>]
  describe 'demo_api_get_demo_products test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
