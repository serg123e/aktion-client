=begin
#Ahello REST API documentation

#На данной странице вы можете выполнять запросы к API, для этого необходимо указать 'appId', который  был передан вам сотрудниками тех. поддержки в поле api_key. Укажите также PartnerUserId (это CRM Id пользователя или его email ), partnerUserId передается в заголовке запроса. Важно!!! ApiKeys-аутентификация c указанием только ключа appId в ближайшее время будет работать только для данной страницы документации. Для реальных сценариев интеграции необходимо использовать HMAC-аутентификацию. В ближайшее время появится раздел помощи по основным вопросам работы с API

OpenAPI spec version: v1
Contact: petrunin@action-media.ru
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.16

=end

require 'spec_helper'
require 'json'

# Unit tests for AktionClient::CatalogApiApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CatalogApiApi' do
  before do
    # run before each test
    @instance = AktionClient::CatalogApiApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CatalogApiApi' do
    it 'should create an instance of CatalogApiApi' do
      expect(@instance).to be_instance_of(AktionClient::CatalogApiApi)
    end
  end

  # unit tests for catalog_api_get_main_product_news_file
  # Получает файл с новостями по головному продукту.
  # @param main_product_id 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'catalog_api_get_main_product_news_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_api_get_main_products
  # Возвращает список головных продуктов
  # @param [Hash] opts the optional parameters
  # @return [Array<MainProduct>]
  describe 'catalog_api_get_main_products test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_api_get_main_products_by_name
  # @param product_name 
  # @param [Hash] opts the optional parameters
  # @return [Array<MainProduct>]
  describe 'catalog_api_get_main_products_by_name test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_api_get_main_products_filtered
  # @param [Hash] opts the optional parameters
  # @return [Array<MainProduct>]
  describe 'catalog_api_get_main_products_filtered test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_api_get_main_products_is_external_partner
  # @param is_external 
  # @param [Hash] opts the optional parameters
  # @return [Array<MainProduct>]
  describe 'catalog_api_get_main_products_is_external_partner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_api_get_main_products_school
  # @param [Hash] opts the optional parameters
  # @return [Array<MainProduct>]
  describe 'catalog_api_get_main_products_school test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_api_get_products_by_main_product
  # @param main_product_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<ProductCore>]
  describe 'catalog_api_get_products_by_main_product test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
