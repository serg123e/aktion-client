=begin
#Ahello REST API documentation

#На данной странице вы можете выполнять запросы к API, для этого необходимо указать 'appId', который  был передан вам сотрудниками тех. поддержки в поле api_key. Укажите также PartnerUserId (это CRM Id пользователя или его email ), partnerUserId передается в заголовке запроса. Важно!!! ApiKeys-аутентификация c указанием только ключа appId в ближайшее время будет работать только для данной страницы документации. Для реальных сценариев интеграции необходимо использовать HMAC-аутентификацию. В ближайшее время появится раздел помощи по основным вопросам работы с API

OpenAPI spec version: v1
Contact: petrunin@action-media.ru
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.16

=end

require 'spec_helper'
require 'json'

# Unit tests for AktionClient::PartnerApiApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PartnerApiApi' do
  before do
    # run before each test
    @instance = AktionClient::PartnerApiApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PartnerApiApi' do
    it 'should create an instance of PartnerApiApi' do
      expect(@instance).to be_instance_of(AktionClient::PartnerApiApi)
    end
  end

  # unit tests for partner_api_get_all_managers
  # Возвращает список менеджеров партнера всей филиальной сети
  # @param [Hash] opts the optional parameters
  # @return [Array<PartnerUser>]
  describe 'partner_api_get_all_managers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_available_partners
  # Получает доступных партнеров для \&quot;мульти-партнер\&quot; пользователя
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<Partner>]
  describe 'partner_api_get_available_partners test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_filial_by_partner_id
  # получаем филиал по партнеру. если партнер null выводится весь список филиалов
  # @param partner_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<Filial>]
  describe 'partner_api_get_filial_by_partner_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_filial_by_unit
  # Возвращает филиал по ИД подразделения
  # @param unit_id 
  # @param [Hash] opts the optional parameters
  # @return [Filial]
  describe 'partner_api_get_filial_by_unit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_manager
  # Получает информацию о менеджере
  # userId - id пользователя в CRM актион или email пользователя
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [PartnerUser]
  describe 'partner_api_get_manager test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_managers
  # Возвращает список менеджеров партнера по id
  # @param partner_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<PartnerUser>]
  describe 'partner_api_get_managers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_my_partners
  # Возвращает список партнеров филиальной сети для текущего партнерского аккаунта
  # @param [Hash] opts the optional parameters
  # @return [Array<Partner>]
  describe 'partner_api_get_my_partners test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_partner_managers
  # Возвращает список менеджеров партнера
  # @param [Hash] opts the optional parameters
  # @return [Array<PartnerUser>]
  describe 'partner_api_get_partner_managers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_position_categories
  # Возвращает справочник Должности-Категории
  # @param [Hash] opts the optional parameters
  # @return [Array<PositionCategory>]
  describe 'partner_api_get_position_categories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_position_directions
  # Возвращает справочник Должности-Направления
  # @param [Hash] opts the optional parameters
  # @return [Array<PositionDirection>]
  describe 'partner_api_get_position_directions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_position_parts
  # Возвращает все справочники должности менеджера партнера
  # @param [Hash] opts the optional parameters
  # @return [PositionParts]
  describe 'partner_api_get_position_parts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_position_product_types
  # Возвращает справочник Должности-Типы продуктов
  # @param [Hash] opts the optional parameters
  # @return [Array<PositionProductType>]
  describe 'partner_api_get_position_product_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_positions
  # Возвращает доступные должности менеджеров партнера
  # @param [Hash] opts the optional parameters
  # @return [Array<PositionTitle>]
  describe 'partner_api_get_positions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_roles
  # Возвращает доступные роли пользователей партнера
  # @param [Hash] opts the optional parameters
  # @return [Array<PartnerUserRole>]
  describe 'partner_api_get_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_get_unit_by_filials
  # Возвращает список подразделений по filialId
  # @param filial_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<UnitsFilial>]
  describe 'partner_api_get_unit_by_filials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_register_manager
  # Регистрирует менеджера в бэк-офисе
  # 
  # @param create_user_model 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'partner_api_register_manager test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partner_api_update_manager
  # Обновляет данные менеджера
  # @param update_user_model 
  # @param [Hash] opts the optional parameters
  # @return [PartnerUser]
  describe 'partner_api_update_manager test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
